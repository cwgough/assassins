[{"C:\\Users\\cwill\\Documents\\Assassins\\client\\src\\index.js":"1","C:\\Users\\cwill\\Documents\\Assassins\\client\\src\\App.js":"2","C:\\Users\\cwill\\Documents\\Assassins\\client\\src\\reportWebVitals.js":"3","C:\\Users\\cwill\\Documents\\Assassins\\client\\src\\components\\targetDisplay.js":"4","C:\\Users\\cwill\\Documents\\Assassins\\client\\src\\components\\loginPage.js":"5","C:\\Users\\cwill\\Documents\\Assassins\\client\\src\\components\\registerPage.js":"6","C:\\Users\\cwill\\Documents\\Assassins\\client\\src\\api\\axios.js":"7"},{"size":552,"mtime":1675922346531,"results":"8","hashOfConfig":"9"},{"size":723,"mtime":1675928182396,"results":"10","hashOfConfig":"9"},{"size":375,"mtime":1675922346525,"results":"11","hashOfConfig":"9"},{"size":2027,"mtime":1675928182404,"results":"12","hashOfConfig":"9"},{"size":2502,"mtime":1675928182400,"results":"13","hashOfConfig":"9"},{"size":5871,"mtime":1675928182403,"results":"14","hashOfConfig":"9"},{"size":149,"mtime":1675928182398,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19v211o",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\cwill\\Documents\\Assassins\\client\\src\\index.js",[],[],"C:\\Users\\cwill\\Documents\\Assassins\\client\\src\\App.js",[],[],"C:\\Users\\cwill\\Documents\\Assassins\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\cwill\\Documents\\Assassins\\client\\src\\components\\targetDisplay.js",[],[],"C:\\Users\\cwill\\Documents\\Assassins\\client\\src\\components\\loginPage.js",["39","40","41","42","43"],[],"import React from 'react'\r\nimport {useRef, useState, useEffect} from 'react'\r\n//import axios from '../api/axios'\r\nimport { Link, useNavigate, useLocation} from 'react-router-dom'\r\nimport '../App.css'\r\nimport axios from '../api/axios'\r\nconst LOGIN_URL = '/login'\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate()\r\n  const userRef = useRef();\r\n  const errRef = useRef();\r\n\r\n  const [name, setUser] = useState('');\r\n  const [password, setPwd] = useState('');\r\n  const [errMsg, setErrMsg] = useState('');\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    \r\n    e.preventDefault();\r\n    console.log(JSON.stringify({name,password}))\r\n    try {\r\n        const response = await axios.post(LOGIN_URL,\r\n            JSON.stringify({ name, password }),\r\n            {\r\n                headers: { 'Content-Type': 'application/json' },\r\n                withCredentials: true\r\n            }\r\n        );\r\n        console.log(\"we done\");\r\n        setUser('');\r\n        setPwd('');\r\n        setSuccess(true);\r\n        navigate(`/${name}`, { replace: true}) //replaces success page \r\n    } catch (err) {\r\n        if (!err?.response) {\r\n            setErrMsg('No Server Response');\r\n        } else if (err.response?.status === 400) {\r\n            setErrMsg('Missing Username or Password');\r\n        } else if (err.response?.status === 401) {\r\n            setErrMsg('Unauthorized');\r\n        } else {\r\n            setErrMsg('Login Failed');\r\n        }\r\n        errRef.current.focus();\r\n    }\r\n    \r\n}\r\n  \r\n  return (\r\n  <>\r\n   <section>\r\n      <h1>PCT Assassins</h1>\r\n      <form onSubmit={handleSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              ref={userRef}\r\n              autoComplete=\"off\"\r\n              onChange={(e) => setUser(e.target.value)}\r\n              value={name}\r\n              required\r\n            />\r\n\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              onChange={(e) => setPwd(e.target.value)}\r\n              value={password}\r\n              required\r\n            />\r\n        <button>Sign In</button>\r\n      </form>\r\n      <p>\r\n        Need an Account?<br />\r\n        <span className=\"line\">\r\n        {/*put router link here*/}\r\n        <a href=\"/register\">Register</a>\r\n        </span>\r\n      </p>\r\n      <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\r\n    </section>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default Login;","C:\\Users\\cwill\\Documents\\Assassins\\client\\src\\components\\registerPage.js",["44","45","46","47"],[],"import { useRef, useState, useEffect } from \"react\";\r\nimport axios from '../api/axios';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst USER_REGEX = /^[A-z][A-z0-9-_]{3,23}$/;\r\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\r\nconst REGISTER_URL = '/register';\r\n\r\nconst Register = () => {\r\n    const userRef = useRef();\r\n    const errRef = useRef();\r\n\r\n    const [name, setUser] = useState('');\r\n    const [validName, setValidName] = useState(false);\r\n    const [userFocus, setUserFocus] = useState(false);\r\n\r\n    const [password, setPwd] = useState('');\r\n    const [validPwd, setValidPwd] = useState(false);\r\n    const [pwdFocus, setPwdFocus] = useState(false);\r\n\r\n    const [matchPwd, setMatchPwd] = useState('');\r\n    const [validMatch, setValidMatch] = useState(false);\r\n    const [matchFocus, setMatchFocus] = useState(false);\r\n\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    useEffect(() => {\r\n        userRef.current.focus();\r\n    }, [])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setValidPwd(PWD_REGEX.test(password));\r\n        setValidMatch(password === matchPwd);\r\n    }, [password, matchPwd])\r\n\r\n    useEffect(() => {\r\n        setErrMsg('');\r\n    }, [name, password, matchPwd])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        // if button enabled with JS hack\r\n\r\n        try {\r\n            const response = await axios.post(REGISTER_URL,\r\n                JSON.stringify({ name, password }),\r\n                {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    withCredentials: true\r\n                }\r\n            );\r\n            // TODO: remove console.logs before deployment\r\n            // console.log(JSON.stringify(response?.data));\r\n            //console.log(JSON.stringify(response))\r\n            setSuccess(true);\r\n            //clear state and controlled inputs\r\n            setUser('');\r\n            setPwd('');\r\n            setMatchPwd('');\r\n        } catch (err) {\r\n            if (!err?.response) {\r\n                setErrMsg('No Server Response');\r\n            } else if (err.response?.status === 409) {\r\n                setErrMsg('Username Taken');\r\n            } else {\r\n                setErrMsg('Registration Failed')\r\n            }\r\n            errRef.current.focus();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {success ? (\r\n                <section>\r\n                    <h1>Success!</h1>\r\n                    <p>\r\n                        <a href=\"/\">Sign In</a>\r\n                    </p>\r\n                </section>\r\n            ) : (\r\n                <section>\r\n                    <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\r\n                    <h1>Register</h1>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            ref={userRef}\r\n                            autoComplete=\"off\"\r\n                            onChange={(e) => setUser(e.target.value)}\r\n                            value={name}\r\n                            required\r\n                            aria-invalid={validName ? \"false\" : \"true\"}\r\n                            aria-describedby=\"uidnote\"\r\n                            onFocus={() => setUserFocus(true)}\r\n                            onBlur={() => setUserFocus(false)}\r\n                        />\r\n                        <p id=\"uidnote\" className={userFocus && name && !validName ? \"instructions\" : \"offscreen\"}>\r\n                        </p>\r\n\r\n\r\n                        <label htmlFor=\"password\">\r\n                            Password:\r\n                        </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            onChange={(e) => setPwd(e.target.value)}\r\n                            value={password}\r\n                            required\r\n                            aria-invalid={validPwd ? \"false\" : \"true\"}\r\n                            aria-describedby=\"pwdnote\"\r\n                            onFocus={() => setPwdFocus(true)}\r\n                            onBlur={() => setPwdFocus(false)}\r\n                        />\r\n                        <p id=\"pwdnote\" className={pwdFocus && !validPwd ? \"instructions\" : \"offscreen\"}>\r\n\r\n                        </p>\r\n\r\n\r\n                        <label htmlFor=\"confirm_pwd\">\r\n                            Confirm Password:\r\n                        </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"confirm_pwd\"\r\n                            onChange={(e) => setMatchPwd(e.target.value)}\r\n                            value={matchPwd}\r\n                            required\r\n                            aria-invalid={validMatch ? \"false\" : \"true\"}\r\n                            aria-describedby=\"confirmnote\"\r\n                            onFocus={() => setMatchFocus(true)}\r\n                            onBlur={() => setMatchFocus(false)}\r\n                        />\r\n                        <p id=\"confirmnote\" className={matchFocus && !validMatch ? \"instructions\" : \"offscreen\"}>\r\n                            Must match the first password input field.\r\n                        </p>\r\n\r\n                        <button disabled={!validMatch ? true : false}>Sign Up</button>\r\n                    </form>\r\n                    <p>\r\n                        Already registered?<br />\r\n                        <span className=\"line\">\r\n                            <a href=\"/\">Sign In</a>\r\n                        </span>\r\n                    </p>\r\n                </section>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register","C:\\Users\\cwill\\Documents\\Assassins\\client\\src\\api\\axios.js",[],[],{"ruleId":"48","severity":1,"message":"49","line":2,"column":27,"nodeType":"50","messageId":"51","endLine":2,"endColumn":36},{"ruleId":"48","severity":1,"message":"52","line":4,"column":10,"nodeType":"50","messageId":"51","endLine":4,"endColumn":14},{"ruleId":"48","severity":1,"message":"53","line":4,"column":29,"nodeType":"50","messageId":"51","endLine":4,"endColumn":40},{"ruleId":"48","severity":1,"message":"54","line":17,"column":10,"nodeType":"50","messageId":"51","endLine":17,"endColumn":17},{"ruleId":"48","severity":1,"message":"55","line":24,"column":15,"nodeType":"50","messageId":"51","endLine":24,"endColumn":23},{"ruleId":"48","severity":1,"message":"52","line":3,"column":10,"nodeType":"50","messageId":"51","endLine":3,"endColumn":14},{"ruleId":"48","severity":1,"message":"56","line":5,"column":7,"nodeType":"50","messageId":"51","endLine":5,"endColumn":17},{"ruleId":"48","severity":1,"message":"57","line":14,"column":23,"nodeType":"50","messageId":"51","endLine":14,"endColumn":35},{"ruleId":"48","severity":1,"message":"55","line":48,"column":19,"nodeType":"50","messageId":"51","endLine":48,"endColumn":27},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useLocation' is defined but never used.","'success' is assigned a value but never used.","'response' is assigned a value but never used.","'USER_REGEX' is assigned a value but never used.","'setValidName' is assigned a value but never used."]